[{"path":"https://stranmax.github.io/rfintext/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 rfintext authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://stranmax.github.io/rfintext/articles/0-Preprocessing-PDF-docs.html","id":"data-collection","dir":"Articles","previous_headings":"","what":"Data collection","title":"0 Preprocessing PDF-docs","text":"Briefly, available policy documents found web received municipalities gathered together folder.","code":""},{"path":"https://stranmax.github.io/rfintext/articles/0-Preprocessing-PDF-docs.html","id":"preprocessing","dir":"Articles","previous_headings":"","what":"Preprocessing","title":"0 Preprocessing PDF-docs","text":"Roughly, divided three parts: Fixing non-readable pdf-format issue Converting pdf plain text file Unstructured plain text files structured corpus lemmatization Lemmatized files read single data frame R saved aspol dataset.","code":""},{"path":"https://stranmax.github.io/rfintext/articles/0-Preprocessing-PDF-docs.html","id":"pdf-problems","dir":"Articles","previous_headings":"Preprocessing","what":"1. PDF problems","title":"0 Preprocessing PDF-docs","text":"PDFs unreadable form unknown reason. Maybe scanned original paper documents? Whatever reason, fixed first. Technique used called OCR optical character recognition. Tool used OCRmyPDF. Tool run via docker container. Additionally Finnish language data package provided pipeline. done: Prequisite: * Docker desktop installed * Tesseract language data file Finnish downloaded: fin.traineddata Steps: 1. Create file named Dockerfile somewhere machine, put fin.traineddata file location 2. Copy paste following Dockerfile: Build docker image: Process PDFs Docker run powershell. Adjust loop syntax preferences/toolkit. directory , run ocrmypdf tool (actually ocrmypdf-fin ). Choose finnish language support -l option. use file name input output. case pdf updated place. even better, non- readable PDFs processed. already recognizable text pdf, skipped left .","code":"FROM jbarlow83/ocrmypdf:v16.0.4    # Example: add a tessdata_best file COPY fin.traineddata /usr/share/tesseract-ocr/5/tessdata/ docker build -t ocrmypdf-fin . cd C:\\path\\to\\my\\pdf-folder Get-ChildItem . -Filter *.pdf | foreach { docker run --rm -w /data -v \".:/data\" ocrmypdf-fin -l fin $_.Name $_.Name }"},{"path":"https://stranmax.github.io/rfintext/articles/0-Preprocessing-PDF-docs.html","id":"pdf-to-plain-text","dir":"Articles","previous_headings":"Preprocessing","what":"2. PDF to plain text","title":"0 Preprocessing PDF-docs","text":"Next want extract text pdf files. task use Poppler toolkit. Poppler tool example pdftools::pdf_text() uses reading PDF files. Reason use command line version pdftools::pdf_text() allow define options available command line far understand. importantly, command line let’s us leave -layout option tries keep original pdf layout resulted text file. creates problems multicolumn pdf converted multicolumn text file. use also poppler via docker container. ’s done. happens cd pdf folder, run utility pdftotext give input file. output file given, automatically created name input pdf file text file.","code":"docker pull minidocks/poppler  cd c:Path\\To\\My\\PDF-dir  Get-ChildItem . -Filter *.pdf | foreach { docker run --rm -v \".:/app\" -w /app minidocks/poppler pdftotext $_.Name }"},{"path":"https://stranmax.github.io/rfintext/articles/0-Preprocessing-PDF-docs.html","id":"lemmatization","dir":"Articles","previous_headings":"Preprocessing","what":"3. Lemmatization","title":"0 Preprocessing PDF-docs","text":"last, text tokenized classified Turku-neural-parse-pipeline toolkit. happens ? use ready made turkunlp docker image. choose cpu version image. (TODO: try get GPU version working) Make sure output UTF-8 encoded. cd directory text files. Loop text files run tool parse_plaintext finnish language model fi_tdt. Save output name _lemma.txt added end. NOTE!-Parallel option -ThrottleLimit works Powershell 7. Drop using Powershell version. NOTE!! Number cores best keep relatively , maybe two three depending much RAM available. Output files text files containing words CoNLL-U format. files read NLP::CoNLLUTextDocument() data frame.","code":"docker pull turkunlp/turku-neural-parser:latest-fi-en-sv-cpu  $OutputEncoding = [Console]::OutputEncoding = [Text.UTF8Encoding]::UTF8  cd C:\\Path\\To\\Your\\txt\\files  Get-ChildItem . -Filter *.txt | ForEach-Object -Parallel { Get-Content -Encoding utf8 $_.FullName |  docker run --rm -i turkunlp/turku-neural-parser:latest-fi-en-sv-cpu stream fi_tdt parse_plaintext > .\\$($_.BaseName)_lemm.txt } -ThrottleLimit 3"},{"path":"https://stranmax.github.io/rfintext/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"package maintainer. Maintainer.","code":""},{"path":"https://stranmax.github.io/rfintext/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ww (2024). rfintext: Package (Title Case). R package version 0.1.0, https://stranmax.github.io/rfintext/, https://github.com/StranMax/rfintext.","code":"@Manual{,   title = {rfintext: What the Package Does (Title Case)},   author = {Who wrote it},   year = {2024},   note = {R package version 0.1.0, https://stranmax.github.io/rfintext/},   url = {https://github.com/StranMax/rfintext}, }"},{"path":"https://stranmax.github.io/rfintext/index.html","id":"rfintext","dir":"","previous_headings":"","what":"What the Package Does (Title Case)","title":"What the Package Does (Title Case)","text":"package contains analysis ready data set aspol created Finnish housing policy documents.","code":""},{"path":"https://stranmax.github.io/rfintext/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"What the Package Does (Title Case)","text":"can install development version rfintext like : Number documents currently 65","code":"# install.packages(\"devtools\") devtools::install_github(\"StranMax/rfintext\") library(rfintext) head(aspol) #>       kunta sent ID                  FORM                  LEMMA UPOSTAG #> 1 Enontekiö    1  1            ENONTEKIÖN              ENonTEKiÖ   PROPN #> 2 Enontekiö    1  2                 KUNTA                  kunta    NOUN #> 3 Enontekiö    1  3       VUOKRA-ASUMISEN        vuokra#Asuminen    NOUN #> 4 Enontekiö    1  4 KEHITTÄMISSUUNNITELMA kehittämis#suunnitelma    NOUN #> 5 Enontekiö    1  5             2017-2025              2017-2025     NUM #> 6 Enontekiö    2  1                    EN                     ei     AUX #>   XPOSTAG                                                    FEATS HEAD #> 1       N                                     Case=Gen|Number=Sing    2 #> 2       N                                     Case=Nom|Number=Sing    4 #> 3       N                    Case=Gen|Derivation=Minen|Number=Sing    4 #> 4       N                                     Case=Nom|Number=Sing    0 #> 5     Num                                             NumType=Card    4 #> 6       V Number=Sing|Person=1|Polarity=Neg|VerbForm=Fin|Voice=Act    2 #>      DEPREL DEPS                     MISC #> 1 nmod:poss    _                        _ #> 2 nsubj:cop    _       SpacesAfter=\\\\r\\\\n #> 3 nmod:poss    _       SpacesAfter=\\\\r\\\\n #> 4      root    _       SpacesAfter=\\\\r\\\\n #> 5    nummod    _ SpacesAfter=\\\\r\\\\n\\\\r\\\\n #> 6       aux    _                        _"},{"path":"https://stranmax.github.io/rfintext/reference/aspol.html","id":null,"dir":"Reference","previous_headings":"","what":"Corpus of Finnish housing policy documents — aspol","title":"Corpus of Finnish housing policy documents — aspol","text":"Analysis ready data set housing policy documents. info format https://universaldependencies.org/format.html","code":""},{"path":"https://stranmax.github.io/rfintext/reference/aspol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Corpus of Finnish housing policy documents — aspol","text":"","code":"aspol"},{"path":"https://stranmax.github.io/rfintext/reference/aspol.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Corpus of Finnish housing policy documents — aspol","text":"data frame rows columns: kunta Municipality name sent Sentence number per document/municipality ID Word index, integer starting 1 new sentence FORM Word form punctuation symbol LEMMA Lemma stem word form UPOSTAG Universal part--speech tag XPOSTAG Language-specific part--speech FEATS List morphological features HEAD Head current word, either value ID zero (0) DEPREL Universal dependency relation HEAD DEPS Enhanced dependency graph form list head-deprel pairs MISC annotation","code":""},{"path":"https://stranmax.github.io/rfintext/reference/aspol.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Corpus of Finnish housing policy documents — aspol","text":"Finnish municipalities","code":""},{"path":"https://stranmax.github.io/rfintext/reference/aspol.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Corpus of Finnish housing policy documents — aspol","text":"","code":"aspol #> # A tibble: 479,457 × 12 #>    kunta   sent ID    FORM  LEMMA UPOSTAG XPOSTAG FEATS HEAD  DEPREL DEPS  MISC  #>    <chr>  <int> <chr> <chr> <chr> <chr>   <chr>   <chr> <chr> <chr>  <chr> <chr> #>  1 Enont…     1 1     ENON… ENon… PROPN   N       Case… 2     nmod:… _     \"_\"   #>  2 Enont…     1 2     KUNTA kunta NOUN    N       Case… 4     nsubj… _     \"Spa… #>  3 Enont…     1 3     VUOK… vuok… NOUN    N       Case… 4     nmod:… _     \"Spa… #>  4 Enont…     1 4     KEHI… kehi… NOUN    N       Case… 0     root   _     \"Spa… #>  5 Enont…     1 5     2017… 2017… NUM     Num     NumT… 4     nummod _     \"Spa… #>  6 Enont…     2 1     EN    ei    AUX     V       Numb… 2     aux    _     \"_\"   #>  7 Enont…     2 2     ONTE… ontea VERB    V       Conn… 0     root   _     \"Spa… #>  8 Enont…     3 1     1     1     NUM     Num     NumT… 0     root   _     \"Spa… #>  9 Enont…     4 1     Sisä… sisä… NOUN    N       Case… 3     compo… _     \"Spa… #> 10 Enont…     4 2     1     1     NUM     Num     NumT… 3     nummod _     \"_\"   #> # ℹ 479,447 more rows"}]
